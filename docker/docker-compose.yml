services:
  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - loki
      - tempo
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.48.1
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  loki:
    image: grafana/loki:2.9.1
    ports:
      - '3100:3100'
    networks:
      - monitoring

  tempo:
    image: grafana/tempo:2.4.1
    command: [ "-config.file=/etc/tempo/tempo.yml" ]
    ports:
      - '3200:3200'    # Para queries (server.http_listen_port)
      - '4320:4318'    # Para ingesta OTLP HTTP
      # - '4317:4317'  # Para ingesta OTLP gRPC, si lo necesitas
    networks:
      - monitoring
    volumes:
      - ./tempo/tempo.yml:/etc/tempo/tempo.yml
      - tempo-storage:/var/tempo/traces

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.95.0
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - '4318:4318' # OTLP HTTP
    depends_on:
      - tempo
    networks:
      - monitoring
    
  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
        - xpack.ml.enabled=false
        - xpack.monitoring.collection.enabled=true
      ports:
        - "9200:9200"
      networks:
        - monitoring

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - monitoring

volumes:
  grafana-storage:
  tempo-storage:

networks:
  monitoring:
    driver: bridge
